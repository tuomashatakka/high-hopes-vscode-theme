
const $schema       = 'vscode://schemas/color-theme'
const type          = 'dark'

const mapTokenColor = ([ scope, settings ]) => ({ 
  scope, 
  settings 
})
  
const getColors = context => ({
  '#000000': context.background.darken().hex,
  '#525252': context.background.lighten(0.1).hex,
  '#606060': context.background.lighten(0.2).hex,
  '#7c7c7c': context.background.lighten(0.3).hex,
  '#808080': context.background.lighten(0.4).hex,
  '#848484': context.background.lighten(0.5).hex,
  '#a0a0a0': context.background.lighten(0.6).hex,
  '#bbbbbb': context.background.lighten(0.7).hex,
  '#c5c5c5': context.background.lighten(0.8).hex,
  '#e7e7e7': context.background.lighten(0.9).hex,
  '#ffffff': context.foreground.hex,

  '#2e3440': context.background.hex,
  '#3b4252': context.background.mix(context.foreground, 0.02).hex,
  '#434c5e': context.background.mix(context.foreground, 0.05).hex,
  '#474f62': context.background.mix(context.foreground, 0.1).hex,
  '#4c566a': context.background.mix(context.foreground, 0.15).hex,
  '#616e88': context.background.mix(context.foreground, 0.2).hex,
  '#5e81ac': context.medium.mix(context.foreground, 0.4).setSaturation(0.7).hex,
  '#81a1c1': context.medium.lighten(0.15).setSaturation(0.25).hex,
  '#d8dee9': context.foreground.mix(context.background, 0.3).hex,
  '#e5e9f0': context.foreground.mix(context.background, 0.2).hex,
  '#eceff4': context.foreground.mix(context.background, 0.1).hex,
  '#f5f6f9': context.foreground.lighten(0.85).hex,

  '#bf616a': context.red.setSaturation(0.65).setLuminance(0.6).hex,
  '#94151b': context.red.setLuminance(0.3).hex,
  '#ff1212': context.red.setSaturation(1).setLuminance(0.5).hex,
  '#e51400': context.red.setSaturation(0.7).setLuminance(0.5).hex,
  '#be1100': context.red.setSaturation(0.3).setLuminance(0.5).hex,
  '#f48771': context.red.setSaturation(0.4).setLuminance(0.65).hex,
  '#d08770': context.red.setSaturation(0.1).setLuminance(0.75).hex,
  '#653723': context.orange.mix(context.red).hex,
  '#ee9d28': context.orange.hex,
  '#ebcb8b': context.orange.hex,
  '#ffcc00': context.orange.hex,
  '#b89500': context.orange.hex,
  '#ffff00': context.yellow.hex,
  '#587c0c': context.green.mix(context.yellow, 0.2).hex,
  '#a3be8c': context.green.mix(context.yellow, 0.2).setSaturation(0.3).hex,
  '#89d185': context.green.hex,
  '#7abd7a': context.green.mix(context.turqoise, 0.3).hex,
  '#81b88b': context.green.mix(context.turqoise, 0.4).hex,
  '#8fbcbb': context.turquoise.hex,
  '#88c0d0': context.turquoise.lighten(0.2).hex,
  '#264f78': context.blue.mix(context.turqoise).darken(0.4).hex,
  '#0c7d9d': context.blue.mix(context.turqoise).darken(0.2).hex,
  '#3399cc': context.blue.hex,
  '#75beff': context.blue.lighten(0.4).hex,
  '#157efb': context.blue.hex,
  '#b180d7': context.purple.hex,
  '#b48ead': context.purple.setLuminance(0.9).hex,
})

export default function populateTheme (context) {
    
  const mappedColors = getColors(context)
  const map = (col, alpha = '') => {
    col   = col.toLowerCase()
    alpha = alpha.toLowerCase()
    return (mappedColors[col] || col) + alpha
  }

  const colors = {
    
    'terminal.ansiBrightGreen'                         : map('#a3be8c'),
    'terminal.ansiGreen'                               : map('#a3be8c'),
    'editorGutter.addedBackground'                     : map('#a3be8c'),
    'editorOverviewRuler.addedForeground'              : map('#a3be8c'),
    'gitDecoration.untrackedResourceForeground'        : map('#a3be8c'),
    
    'terminal.ansiBrightCyan'                          : map('#8fbcbb'),
    'gitDecoration.submoduleResourceForeground'        : map('#8fbcbb'),
    'textPreformat.foreground'                         : map('#8fbcbb'),
    'merge.incomingHeaderBackground'                   : map('#8fbcbb', '66'),
    'merge.incomingContentBackground'                  : map('#8fbcbb', '4d'),

    'terminal.ansiCyan'                                : map('#88c0d0'),
    'badge.background'                                 : map('#88c0d0'),
    'editorBracketMatch.border'                        : map('#88c0d0'),
    'editorLink.activeForeground'                      : map('#88c0d0'),
    'editorSuggestWidget.highlightForeground'          : map('#88c0d0'),
    'list.activeSelectionBackground'                   : map('#88c0d0'),
    'list.highlightForeground'                         : map('#88c0d0'),
    'minimap.findMatchHighlight'                       : map('#88c0d0'),
    'notificationCenterHeader.foreground'              : map('#88c0d0'),
    'notificationLink.foreground'                      : map('#88c0d0'),
    'panelTitle.activeForeground'                      : map('#88c0d0'),
    'peekViewResult.fileForeground'                    : map('#88c0d0'),
    'peekViewTitleLabel.foreground'                    : map('#88c0d0'),
    'pickerGroup.foreground'                           : map('#88c0d0'),
    'progressBar.background'                           : map('#88c0d0'),
    'textLink.activeForeground'                        : map('#88c0d0'),
    'textLink.foreground'                              : map('#88c0d0'),
    'peekViewResult.matchHighlightBackground'          : map('#88c0d0', 'cc'),
    'list.dropBackground'                              : map('#88c0d0', '99'),
    'list.focusBackground'                             : map('#88c0d0', '99'),
    'selection.background'                             : map('#88c0d0', '99'),
    'editorOverviewRuler.findMatchForeground'          : map('#88c0d0', '66'),
    'editorOverviewRuler.rangeHighlightForeground'     : map('#88c0d0', '66'),
    'editorOverviewRuler.selectionHighlightForeground' : map('#88c0d0', '66'),
    'editorOverviewRuler.wordHighlightForeground'      : map('#88c0d0', '66'),
    'editorOverviewRuler.wordHighlightStrongForeground': map('#88c0d0', '66'),
    'editor.findMatchBackground'                       : map('#88c0d0', '66'),
    'peekViewEditor.matchHighlightBackground'          : map('#88c0d0', '4d'),
    'editor.findMatchHighlightBackground'              : map('#88c0d0', '33'),
    'editor.findRangeHighlightBackground'              : map('#88c0d0', '33'),
    'panelTitle.activeBorder'                          : map('#88c0d0', '00'),
    
    
    'terminal.ansiBrightBlue'                          : map('#81a1c1'),
    'terminal.ansiBlue'                                : map('#81a1c1'),
    'inputValidation.infoBackground'                   : map('#81a1c1'),
    'inputValidation.infoBorder'                       : map('#81a1c1'),
    'textBlockQuote.border'                            : map('#81a1c1'),
    'editorOverviewRuler.infoForeground'               : map('#81a1c1'),
    'editor.wordHighlightStrongBackground'             : map('#81a1c1', '99'),
    'editor.wordHighlightBackground'                   : map('#81a1c1', '66'),
    'merge.currentHeaderBackground'                    : map('#81a1c1', '66'),
    'merge.currentContentBackground'                   : map('#81a1c1', '4d'),
    'diffEditor.insertedTextBackground'                : map('#81a1c1', '33'),
    'gitDecoration.conflictingResourceForeground'      : map('#5e81ac'),
    'inputOption.activeBackground'                     : map('#5e81ac'),
    'inputOption.activeBorder'                         : map('#5e81ac'),
    'statusBar.debuggingBackground'                    : map('#5e81ac'),
    'editorMarkerNavigation.background'                : map('#5e81ac', 'c0'),
    'tree.indentGuidesStroke'                          : map('#616e88'),
    
    'button.background'                                : map('#434c5e'),
    'button.hoverBackground'                           : map('#4c566a'),
    'extensionButton.prominentHoverBackground'         : map('#4c566a'),
    'welcomePage.buttonHoverBackground'                : map('#4c566a'),
    
    'terminal.ansiBrightBlack'                         : map('#4c566a'),
    'editorCodeLens.foreground'                        : map('#4c566a'),
    'editorIndentGuide.activeBackground'               : map('#4c566a'),
    'editorLineNumber.foreground'                      : map('#4c566a'),
    'editorWhitespace.foreground'                      : map('#4c566a', 'b3'),
    'debugExceptionWidget.background'                  : map('#4c566a'),
    'peekView.border'                                  : map('#4c566a'),
    'statusBarItem.activeBackground'                   : map('#4c566a'),
    'textCodeBlock.background'                         : map('#4c566a'),
    
    'editorRuler.foreground'                           : map('#434c5e'),
    'editorSuggestWidget.selectedBackground'           : map('#434c5e'),
    'extensionButton.prominentBackground'              : map('#434c5e'),
    'list.inactiveSelectionBackground'                 : map('#434c5e'),
    'peekViewResult.selectionBackground'               : map('#434c5e'),
    'statusBarItem.hoverBackground'                    : map('#434c5e'),
    'statusBarItem.prominentHoverBackground'           : map('#434c5e'),
    'welcomePage.buttonBackground'                     : map('#434c5e'),
    'list.inactiveFocusBackground'                     : map('#434c5e', 'cc'),
    'editor.inactiveSelectionBackground'               : map('#434c5e', 'cc'),
    'editor.selectionBackground'                       : map('#434c5e', 'cc'),
    'editor.selectionHighlightBackground'              : map('#434c5e', 'cc'),
    'scrollbarSlider.activeBackground'                 : map('#434c5e', 'aa'),
    'scrollbarSlider.hoverBackground'                  : map('#434c5e', 'aa'),
    'scrollbarSlider.background'                       : map('#434c5e', '99'),
    'editorIndentGuide.background'                     : map('#434c5e', 'b3'),
    'editor.rangeHighlightBackground'                  : map('#434c5e', '52'),
    
    'statusBar.background'                             : context.background.hex,
    'statusBar.noFolderBackground'                     : context.background.hex,
    'statusBar.border'                                 : context.background.hex,
    'statusBarItem.prominentBackground'                : context.background.hex,
    
    'tab.border'                                       : map(context.background.hex, '00'),
    'tab.activeBorder'                                 : map('#88c0d0', '00'),
    'tab.unfocusedActiveBorder'                        : map('#88c0d0', '00'),
    'tab.hoverBorder'                                  : map('#88c0d0', '00'),
    'tab.activeBorderTop'                              : map('#88c0d0', 'b0'),
    'tab.unfocusedActiveBorderTop'                     : map('#88c0d0', '80'),
    'tab.unfocusedHoverBorder'                         : map('#88c0d0', '40'),
    
    'tab.activeBackground'                             : context.background.lighten(0.1).hex,
    'tab.hoverBackground'                              : map(context.background.lighten(0.1).hex, 'cc'),
    'tab.unfocusedHoverBackground'                     : map(context.background.lighten(0.1).hex, 'b3'),
    'tab.inactiveBackground'                           : map('#2e3440'),
    
    'tab.activeForeground'                             : map('#d8dee9'),
    'tab.unfocusedActiveForeground'                    : map('#d8dee9', '99'),
    'tab.inactiveForeground'                           : map('#d8dee9', '66'),
    'tab.unfocusedInactiveForeground'                  : map('#d8dee9', '66'),
    
    'textBlockQuote.background'                        : map(context.background.hex),
    'terminal.ansiBlack'                               : map(context.background.hex),
    'dropdown.background'                              : map(context.background.hex),
    'dropdown.border'                                  : map(context.background.hex),
    
    'editor.hoverHighlightBackground'                  : map(context.background.hex),
    'editor.lineHighlightBackground'                   : map(context.background.hex),
    'editor.lineHighlightBorder'                       : map(context.background.hex),
    'editorHoverWidget.background'                     : map(context.background.hex),
    'editorHoverWidget.border'                         : map(context.background.hex),
    'editorOverviewRuler.border'                       : map(context.background.hex),
    'editorOverviewRuler.currentContentForeground'     : map(context.background.hex),
    'editorOverviewRuler.incomingContentForeground'    : map(context.background.hex),
    'editorSuggestWidget.border'                       : map(context.background.hex),
    'editorWidget.border'                              : map(context.background.hex),
    'editorGroup.dropBackground'                       : map(context.background.hex, '99'),
    'editorGroup.border'                               : map(context.background.hex, '01'),
    'editorGroupHeader.tabsBorder'                     : map(context.background.hex, '00'),
    'focusBorder'                                      : map(context.background.hex),
    'input.background'                                 : map(context.background.hex),
    'input.border'                                     : map(context.background.hex),
    'list.hoverBackground'                             : map(context.background.hex),
    'panel.border'                                     : map(context.background.hex),
    'peekViewTitle.background'                         : map(context.background.hex),
    'pickerGroup.border'                               : map(context.background.hex),

    'debugToolBar.background'                          : map(context.background.hex),
    'sideBar.border'                                   : map(context.background.hex),
    'sideBarSectionHeader.background'                  : map(context.background.hex),
    'merge.border'                                     : map(context.background.hex, '00'),
    'notificationCenter.border'                        : map(context.background.hex, '00'),
    'notifications.background'                         : map(context.background.hex),
    'notificationToast.border'                         : map(context.background.hex, '00'),

    'activityBarBadge.foreground'                      : context.background.hex,
    'activityBar.background'                           : context.background.hex,
    'activityBarBadge.background'                      : context.foreground.hex,
    'activityBar.dropBackground'                       : map(context.background.hex),

    'badge.foreground'                                 : map('#2e3440'),
    'debugExceptionWidget.border'                      : map('#2e3440'),
    
    'editor.background'                                : map('#2e3440'),
    'editorGroup.emptyBackground'                      : map('#2e3440'),
    'editorGroup.focusedEmptyBorder'                   : map('#2e3440'),
    'editorGroupHeader.noTabsBackground'               : map('#2e3440'),
    'editorGroupHeader.tabsBackground'                 : map('#2e3440'),
    'editorGutter.background'                          : map('#2e3440'),
    'editorSuggestWidget.background'                   : map('#2e3440'),
    'editorWidget.background'                          : map('#2e3440'),
    
    'list.activeSelectionForeground'                   : map('#2e3440'),
    'notificationCenterHeader.background'              : map('#2e3440'),
    'notifications.border'                             : map('#2e3440'),
    'panel.background'                                 : map('#2e3440'),
    'peekViewEditor.background'                        : map('#2e3440'),
    'peekViewEditorGutter.background'                  : map('#2e3440'),
    'peekViewResult.background'                        : map('#2e3440'),
    'sideBar.background'                               : map('#2e3440'),
    'terminal.background'                              : map('#2e3440'),
    'titleBar.activeBackground'                        : map('#2e3440'),
    'titleBar.inactiveBackground'                      : map('#2e3440'),
    'walkThrough.embeddedEditorBackground'             : map('#2e3440'),
    'titleBar.border'                                  : map('#2e3440', '00'),
    'editorBracketMatch.background'                    : map('#2e3440', '00'),
    'scrollbar.shadow'                                 : map('#000000', '66'),
    'widget.shadow'                                    : map('#000000', '66'),

    'list.hoverForeground'                             : map('#eceff4'),
    'textSeparator.foreground'                         : map('#eceff4'),
    'terminal.ansiBrightWhite'                         : map('#eceff4'),
    'terminal.ansiWhite'                               : map('#e5e9f0'),
    'activityBar.foreground'                           : map('#d8dee9'),
    'button.foreground'                                : map('#d8dee9'),
    'dropdown.foreground'                              : map('#d8dee9'),
    'editor.foreground'                                : map('#d8dee9'),
    'editorCursor.foreground'                          : map('#d8dee9'),
    'editorLineNumber.activeForeground'                : map('#d8dee9'),
    'editorSuggestWidget.foreground'                   : map('#d8dee9'),
    'extensionButton.prominentForeground'              : map('#d8dee9'),
    foreground                                         : map('#d8dee9'),
    'input.foreground'                                 : map('#d8dee9'),
    'list.focusForeground'                             : map('#d8dee9'),
    'list.inactiveSelectionForeground'                 : map('#d8dee9'),
    'notifications.foreground'                         : map('#d8dee9'),
    'panelTitle.inactiveForeground'                    : map('#d8dee9'),
    'peekViewResult.selectionForeground'               : map('#d8dee9'),
    'peekViewTitleDescription.foreground'              : map('#d8dee9'),
    'sideBar.foreground'                               : map('#d8dee9'),
    'sideBarSectionHeader.foreground'                  : map('#d8dee9'),
    'sideBarTitle.foreground'                          : map('#d8dee9'),
    'statusBar.debuggingForeground'                    : map('#d8dee9'),
    'statusBar.foreground'                             : map('#d8dee9'),
    'statusBar.noFolderForeground'                     : map('#d8dee9'),
    
    'titleBar.activeForeground'                        : map('#d8dee9'),
    'terminal.foreground'                              : map('#d8dee9'),
    'descriptionForeground'                            : map('#d8dee9', 'e6'),
    'input.placeholderForeground'                      : map('#d8dee9', '99'),
    'gitDecoration.ignoredResourceForeground'          : map('#d8dee9', '66'),
    'titleBar.inactiveForeground'                      : map('#d8dee9', '66'),
    'peekViewResult.lineForeground'                    : map('#d8dee9', '66'),

    'terminal.ansiBrightMagenta'                       : map('#b48ead'),
    'terminal.ansiMagenta'                             : map('#b48ead'),

    'terminal.ansiBrightYellow'                        : map('#ebcb8b'),
    'terminal.ansiYellow'                              : map('#ebcb8b'),
    'editorGutter.modifiedBackground'                  : map('#ebcb8b'),
    'editorHint.foreground'                            : map('#ebcb8b'),
    'editorOverviewRuler.modifiedForeground'           : map('#ebcb8b'),
    'editorOverviewRuler.warningForeground'            : map('#ebcb8b'),
    'editorWarning.foreground'                         : map('#ebcb8b'),
    'gitDecoration.modifiedResourceForeground'         : map('#ebcb8b'),
    'list.warningForeground'                           : map('#ebcb8b'),
    'editorMarkerNavigationWarning.background'         : map('#ebcb8b', 'c0'),
    'editorHint.border'                                : map('#ebcb8b', '00'),
    'editorWarning.border'                             : map('#ebcb8b', '00'),
    'inputValidation.warningBackground'                : map('#d08770'),
    'inputValidation.warningBorder'                    : map('#d08770'),
    'terminal.ansiBrightRed'                           : map('#bf616a'),
    'terminal.ansiRed'                                 : map('#bf616a'),
    'editorError.foreground'                           : map('#bf616a'),
    'editorGutter.deletedBackground'                   : map('#bf616a'),
    'editorOverviewRuler.deletedForeground'            : map('#bf616a'),
    'editorOverviewRuler.errorForeground'              : map('#bf616a'),
    'errorForeground'                                  : map('#bf616a'),
    'gitDecoration.deletedResourceForeground'          : map('#bf616a'),
    'inputValidation.errorBackground'                  : map('#bf616a'),
    'inputValidation.errorBorder'                      : map('#bf616a'),
    'list.errorForeground'                             : map('#bf616a'),
    'editorMarkerNavigationError.background'           : map('#bf616a', 'c0'),
    'diffEditor.removedTextBackground'                 : map('#bf616a', '4d'),
    'editorError.border'                               : map('#bf616a', '00'),

    // "list.activeSelectionForeground": "#84FFFF",
    // "list.inactiveSelectionForeground": "#84FFFF",
    // "list.highlightForeground": "#84FFFF",
    // "scrollbarSlider.activeBackground": "#84FFFF50",
    // "editorSuggestWidget.highlightForeground": "#84FFFF",
    // "textLink.foreground": "#84FFFF",
    // "progressBar.background": "#84FFFF",
    // "pickerGroup.foreground": "#84FFFF",
    // "notificationLink.foreground": "#84FFFF",
    // "editorWidget.resizeBorder": "#84FFFF",
    // "editorWidget.border": "#84FFFF",
    // "settings.modifiedItemIndicator": "#84FFFF",
    // "settings.headerForeground": "#84FFFF",
    // "panelTitle.activeBorder": "#84FFFF",
    // "breadcrumb.activeSelectionForeground": "#84FFFF",
    // "menu.selectionForeground": "#84FFFF",
    // "menubar.selectionForeground": "#84FFFF",
    // "editor.findMatchBorder": "#84FFFF",
    // "selection.background": "#84FFFF40",

    // #region [ rgba(255,0,255,0.2,0.1) ]
      //'activityBar.activeBorder': map('#d8dee9'),
      //'activityBar.inactiveForeground': map('#d8dee9', '66'),
      //'bookmarks.lineBackground': map('#000000', '00'),
      //'bookmarks.lineBorder': map('#000000', '00'),
      //'bookmarks.overviewRuler': map('#157efb', '88'),
      //'breadcrumb.activeSelectionForeground': map('#f5f6f9'),
      //'breadcrumb.background': map('#2e3440'),
      //'breadcrumb.focusForeground': map('#f5f6f9'),
      //'breadcrumb.foreground': map('#d8dee9', 'cc'),
      //'breadcrumbPicker.background': map('#2e3440'),
      //'checkbox.background': map(context.background.hex),
      //'checkbox.border': map(context.background.hex),
      //'checkbox.foreground': map('#d8dee9'),
      //'debugIcon.breakpointCurrentStackframeForeground': map('#ffcc00'),
      //'debugIcon.breakpointDisabledForeground': map('#848484'),
      //'debugIcon.breakpointForeground': map('#e51400'),
      //'debugIcon.breakpointStackframeForeground': map('#89d185'),
      //'debugIcon.breakpointUnverifiedForeground': map('#848484'),
      //'debugIcon.continueForeground': map('#75beff'),
      //'debugIcon.disconnectForeground': map('#f48771'),
      //'debugIcon.pauseForeground': map('#75beff'),
      //'debugIcon.restartForeground': map('#89d185'),
      //'debugIcon.startForeground': map('#89d185'),
      //'debugIcon.stepBackForeground': map('#75beff'),
      //'debugIcon.stepIntoForeground': map('#75beff'),
      //'debugIcon.stepOutForeground': map('#75beff'),
      //'debugIcon.stepOverForeground': map('#75beff'),
      //'debugIcon.stopForeground': map('#f48771'),
      //'editor.focusedStackFrameHighlightBackground': map('#7abd7a', '4d'),
      //'editor.foldBackground': map('#434c5e', '3d'),
      //'editor.snippetFinalTabstopHighlightBorder': map('#525252'),
      //'editor.snippetTabstopHighlightBackground': map('#7c7c7c', '4d'),
      //'editor.stackFrameHighlightBackground': map('#ffff00', '33'),
      //'editor.symbolHighlightBackground': map('#88c0d0', '33'),
      //'editorGutter.commentRangeForeground': map('#c5c5c5'),
      //'editorHoverWidget.foreground': map('#d8dee9'),
      //'editorHoverWidget.statusBarBackground': map('#474f62'),
      //'editorInfo.foreground': map('#75beff'),
      //'editorLightBulb.foreground': map('#ffcc00'),
      //'editorLightBulbAutoFix.foreground': map('#75beff'),
      //'editorMarkerNavigationInfo.background': map('#75beff'),
      //'editorOverviewRuler.bracketMatchForeground': map('#a0a0a0'),
      //'editorOverviewRuler.commonContentForeground': map('#606060', '66'),
      //'editorPane.background': map('#2e3440'),
      //'editorUnnecessaryCode.opacity': map('#000000', 'aa'),
      //'editorWidget.foreground': map('#d8dee9'),
      //'extensionBadge.remoteBackground': map('#88c0d0'),
      //'extensionBadge.remoteForeground': map('#2e3440'),
      //'gitDecoration.addedResourceForeground': map('#81b88b'),
      //'icon.foreground': map('#c5c5c5'),
      //'imagePreview.border': map('#808080', '59'),
      //'inlineTitleBar.background': map('#2e3440'),
      //'list.filterMatchBackground': map('#88c0d0', '33'),
      //'list.invalidItemForeground': map('#b89500'),
      //'listFilterWidget.background': map('#653723'),
      //'listFilterWidget.noMatchesOutline': map('#be1100'),
      //'listFilterWidget.outline': map('#000000', '00'),
      //'menu.background': map(context.background.hex),
      //'menu.foreground': map('#d8dee9'),
      //'menu.selectionBackground': map('#88c0d0'),
      //'menu.selectionForeground': map('#2e3440'),
      //'menu.separatorBackground': map('#bbbbbb'),
      //'menubar.selectionBackground': map('#ffffff', '1a'),
      //'menubar.selectionForeground': map('#d8dee9'),
      //'merge.commonContentBackground': map('#606060', '29'),
      //'merge.commonHeaderBackground': map('#606060', '66'),
      //'minimap.errorHighlight': map('#ff1242', 'b3'),
      //'minimap.selectionHighlight': map('#264f78'),
      //'minimap.warningHighlight': map('#ebcb8b'),
      //'minimapGutter.addedBackground': map('#587c0c'),
      //'minimapGutter.deletedBackground': map('#94151b'),
      //'minimapGutter.modifiedBackground': map('#0c7d9d'),
      //'minimapSlider.activeBackground': map('#434c5e', '55'),
      //'minimapSlider.background': map('#434c5e', '4d'),
      //'minimapSlider.hoverBackground': map('#434c5e', '55'),
      //'notificationsErrorIcon.foreground': map('#bf616a'),
      //'notificationsInfoIcon.foreground': map('#75beff'),
      //'notificationsWarningIcon.foreground': map('#ebcb8b'),
      //'panel.dropBackground': map('#ffffff', '1f'),
      //'problemsErrorIcon.foreground': map('#bf616a'),
      //'problemsInfoIcon.foreground': map('#75beff'),
      //'problemsWarningIcon.foreground': map('#ebcb8b'),
      //'quickInput.background': map('#2e3440'),
      //'quickInput.foreground': map('#d8dee9'),
      //'searchEditor.findMatchBackground': map('#88c0d0', '22'),
      //'searchEditor.textInputBorder': map(context.background.hex),
      //'settings.checkboxBackground': map(context.background.hex),
      //'settings.checkboxBorder': map(context.background.hex),
      //'settings.checkboxForeground': map('#d8dee9'),
      //'settings.dropdownBackground': map(context.background.hex),
      //'settings.dropdownBorder': map(context.background.hex),
      //'settings.dropdownForeground': map('#d8dee9'),
      //'settings.dropdownListBorder': map(context.background.hex),
      //'settings.headerForeground': map('#e7e7e7'),
      //'settings.modifiedItemIndicator': map('#0c7d9d'),
      //'settings.numberInputBackground': map(context.background.hex),
      //'settings.numberInputBorder': map(context.background.hex),
      //'settings.numberInputForeground': map('#d8dee9'),
      //'settings.textInputBackground': map(context.background.hex),
      //'settings.textInputBorder': map(context.background.hex),
      //'settings.textInputForeground': map('#d8dee9'),
      //'sideBar.dropBackground': map('#ffffff', '1f'),
      //'statusBar.debuggingBorder': map(context.background.hex, '00'),
      //'statusBar.noFolderBorder': map(context.background.hex, '00'),
      //'statusBarItem.prominentForeground': map('#d8dee9'),
      //'statusBarItem.remoteBackground': map('#88c0d0'),
      //'statusBarItem.remoteForeground': map('#2e3440'),
      //'symbolIcon.arrayForeground': map('#d8dee9'),
      //'symbolIcon.booleanForeground': map('#d8dee9'),
      //'symbolIcon.classForeground': map('#ee9d28'),
      //'symbolIcon.colorForeground': map('#d8dee9'),
      //'symbolIcon.constantForeground': map('#d8dee9'),
      //'symbolIcon.constructorForeground': map('#b180d7'),
      //'symbolIcon.enumeratorForeground': map('#ee9d28'),
      //'symbolIcon.enumeratorMemberForeground': map('#75beff'),
      //'symbolIcon.eventForeground': map('#ee9d28'),
      //'symbolIcon.fieldForeground': map('#75beff'),
      //'symbolIcon.fileForeground': map('#d8dee9'),
      //'symbolIcon.folderForeground': map('#d8dee9'),
      //'symbolIcon.functionForeground': map('#b180d7'),
      //'symbolIcon.interfaceForeground': map('#75beff'),
      //'symbolIcon.keyForeground': map('#d8dee9'),
      //'symbolIcon.keywordForeground': map('#d8dee9'),
      //'symbolIcon.methodForeground': map('#b180d7'),
      //'symbolIcon.moduleForeground': map('#d8dee9'),
      //'symbolIcon.namespaceForeground': map('#d8dee9'),
      //'symbolIcon.nullForeground': map('#d8dee9'),
      //'symbolIcon.numberForeground': map('#d8dee9'),
      //'symbolIcon.objectForeground': map('#d8dee9'),
      //'symbolIcon.operatorForeground': map('#d8dee9'),
      //'symbolIcon.packageForeground': map('#d8dee9'),
      //'symbolIcon.propertyForeground': map('#d8dee9'),
      //'symbolIcon.referenceForeground': map('#d8dee9'),
      //'symbolIcon.snippetForeground': map('#d8dee9'),
      //'symbolIcon.stringForeground': map('#d8dee9'),
      //'symbolIcon.structForeground': map('#d8dee9'),
      //'symbolIcon.textForeground': map('#d8dee9'),
      //'symbolIcon.typeParameterForeground': map('#d8dee9'),
      //'symbolIcon.unitForeground': map('#d8dee9'),
      //'symbolIcon.variableForeground': map('#75beff'),
      //'tab.activeModifiedBorder': map('#3399cc'),
      //'tab.inactiveModifiedBorder': map('#3399cc', '80'),
      //'tab.unfocusedActiveBackground': map(context.background.hex),
      //'tab.unfocusedActiveModifiedBorder': map('#3399cc', '80'),
      //'tab.unfocusedInactiveModifiedBorder': map('#3399cc', '40'),
      //'terminal.border': map(context.background.hex),
      //'terminal.selectionBackground': map('#ffffff', '40')
    // #endregion

  }

  const tokens = {
    'emphasis':                   { fontStyle: 'italic' },
    'strong':                     { fontStyle: 'bold' },

    // Comments
    'comment':                              { foreground: map('#616e88', 'a0') },
    'punctuation.definition.comment':       { foreground: map('#616e88', '80') },
    'punctuation.end.definition.comment':   { foreground: map('#616e88', '80') },
    'punctuation.start.definition.comment': { foreground: map('#616e88', '80') },

    'constant.character':         { foreground: map('#ebcb8b') },
    'constant.character.escape':  { foreground: map('#ebcb8b') },
    'constant.language':          { foreground: map('#81a1c1') },
    'constant.numeric':           { foreground: map('#b48ead') },
    'constant.regexp':            { foreground: map('#ebcb8b') },

    'entity.name.class':            { foreground: map('#8fbcbb') },
    'entity.name.type.class':       { foreground: map('#8fbcbb') },
    'entity.name.tag':              { foreground: map('#81a1c1') },
    'entity.other.attribute-name':  { foreground: map('#8fbcbb') },
    'entity.other.inherited-class': { foreground: map('#8fbcbb'), fontStyle: 'bold' },

    'invalid.illegal':              { foreground: map('#d8dee9'), 'background': map('#bf616a') },
    'invalid.deprecated':           { foreground: map('#d8dee9'), 'background': map('#ebcb8b') },

    // 'keyword':            { foreground: map(context.keyword.hex) },
    'keyword.operator':   { foreground: map(context.keyword.hex) },
    'keyword.other.new':  { foreground: map(context.keyword.hex) },

    'markup.bold':        { fontStyle: 'bold' },
    'markup.changed':     { foreground: map('#ebcb8b') },
    'markup.deleted':     { foreground: map('#bf616a') },
    'markup.inserted':    { foreground: map('#a3be8c') },


    // Functions
    'punctuation.definition.method-parameters':   { foreground: context.definition.mix(context.foreground).hex },
    'punctuation.definition.function-parameters': { foreground: context.definition.mix(context.foreground).hex },
    'punctuation.definition.parameters':          { foreground: context.definition.mix(context.foreground).hex },
    'meta.function':                              { foreground: context.definition.mix(context.medium).hex },
    'entity.name.function':                       { foreground: context.function.hex, fontStyle: 'italic' },
    'meta.method-call':                           { foreground: context.function.mix(context.medium).hex + '80' },
    'meta.method-call.with-arguments':            { foreground: context.function.mix(context.medium).hex + '80' },
    'meta.method-call.without-arguments':         { foreground: context.function.mix(context.medium).hex + '80' },

    'meta.preprocessor':                { foreground: map('#5e81ac') },

    'punctuation':                                  { foreground: map('#eceff4') },
    'punctuation.definition.keyword':               { foreground: map('#d08770') },
    'punctuation.definition.tag':                   { foreground: map('#81a1c1') },
    'punctuation.section':                          { foreground: map('#eceff4') },
    'punctuation.section.embedded.begin':           { foreground: map('#81a1c1') },
    'punctuation.section.embedded.end':             { foreground: map('#81a1c1') },
    'punctuation.terminator':                       { foreground: map('#81a1c1') },
    'punctuation.definition.variable':              { foreground: map('#81a1c1') },

    'storage':          { foreground: context.storage.hex, fontStyle: 'italic' },
    'storage.type':     { foreground: context.storage.hex, fontStyle: 'italic' },

    'string':           { foreground: map('#a3be8c') },
    'string.regexp':    { foreground: map('#ebcb8b') },

    'support.class':              { foreground: context.function.hex },
    'support.constant':           { foreground: map('#81a1c1') },
    'support.function':           { foreground: map('#88c0d0') },
    'support.function.construct': { foreground: map('#81a1c1') },
    'support.type':               { foreground: map('#8fbcbb') },
    'support.type.exception':     { foreground: map('#8fbcbb') },

    'token.debug-token': { foreground: map('#b48ead') },
    'token.error-token': { foreground: map('#bf616a') },
    'token.info-token': { foreground: map('#88c0d0') },
    'token.warn-token': { foreground: map('#ebcb8b') },

    // 'variable.other': { foreground: map('#d8dee9') },
    'variable.language': { foreground: map('#81a1c1') },
    'variable.parameter': { foreground: map('#d8dee9') },

    'punctuation.separator.pointer-access.c': { foreground: map('#81a1c1') },
    'source.c meta.preprocessor.include,source.c string.quoted.other.lt-gt.include': { foreground: map('#8fbcbb') },
    'source.cpp keyword.control.directive.conditional': { foreground: map('#5e81ac'), fontStyle: 'bold' },
    'source.cpp punctuation.definition.directive': { foreground: map('#5e81ac'), fontStyle: 'bold' },
    'source.c keyword.control.directive.conditional': { foreground: map('#5e81ac'), fontStyle: 'bold' },
    'source.c punctuation.definition.directive': { foreground: map('#5e81ac'), fontStyle: 'bold' },

    'source.css constant.other.color.rgb-value': { foreground: map('#b48ead') },
    'source.css meta.property-name': { foreground: map(context.keyword.hex) },
    'source.css meta.property-value': { foreground: map('#88c0d0') },
    'source.css keyword.control.at-rule.media': { foreground: map('#d08770') },

    'source.css punctuation.definition.keyword':                                          { foreground: map('#81a1c1') },
    'source.css support.type.property-name':                                              { foreground: map('#d8dee9') },
    'source.css.scss punctuation.definition.interpolation.begin.bracket.curly':           { foreground: map('#81a1c1') },
    'source.css.scss punctuation.definition.interpolation.end.bracket.curly':             { foreground: map('#81a1c1') },
    'source.css.scss variable.interpolation':                                             { foreground: map('#d8dee9'), fontStyle: 'italic' },

    'source.diff meta.diff.range.context':                                                { foreground: map('#8fbcbb') },
    'source.diff meta.diff.header.from-file':                                             { foreground: map('#8fbcbb') },
    'source.diff punctuation.definition.from-file':                                       { foreground: map('#8fbcbb') },
    'source.diff punctuation.definition.range':                                           { foreground: map('#8fbcbb') },
    'source.diff punctuation.definition.separator':                                       { foreground: map('#81a1c1') },

    'entity.name.type.module.elixir':                                                     { foreground: map('#8fbcbb') },
    'variable.other.constant.elixir':                                                     { foreground: map('#8fbcbb') },
    'variable.other.readwrite.module.elixir':                                             { foreground: map('#d8dee9'), fontStyle: 'bold' },
    'constant.other.symbol.elixir':                                                       { foreground: map('#d8dee9'), fontStyle: 'bold' },

    'source.go constant.other.placeholder.go':                                            { foreground: map('#ebcb8b') },

    'source.java comment.block.documentation.javadoc punctuation.definition.entity.html': { foreground: map('#81a1c1') },
    'source.java constant.other':                                                         { foreground: map('#d8dee9') },
    'source.java keyword.other.documentation':                                            { foreground: map('#8fbcbb') },
    'source.java keyword.other.documentation.author.javadoc':                             { foreground: map('#8fbcbb') },
    'source.java keyword.other.documentation.directive':                                  { foreground: map('#8fbcbb') },
    'source.java keyword.other.documentation.custom':                                     { foreground: map('#8fbcbb') },
    'source.java keyword.other.documentation.see.javadoc':                                { foreground: map('#8fbcbb') },
    'source.java meta.method-call meta.method':                                           { foreground: map('#88c0d0') },
    'source.java meta.tag.template.link.javadoc':                                         { foreground: map('#8fbcbb') },
    'source.java string.other.link.title.javadoc':                                        { foreground: map('#8fbcbb') },
    'source.java meta.tag.template.value.javadoc':                                        { foreground: map('#88c0d0') },
    'source.java punctuation.definition.keyword.javadoc':                                 { foreground: map('#8fbcbb') },
    'source.java punctuation.definition.tag.begin.javadoc':                               { foreground: map('#616e88') },
    'source.java punctuation.definition.tag.end.javadoc':                                 { foreground: map('#616e88') },
    'source.java storage.modifier.import':                                                { foreground: map('#8fbcbb') },
    'source.java storage.modifier.package':                                               { foreground: map('#8fbcbb') },
    'source.java storage.type':                                                           { foreground: map('#8fbcbb') },
    'source.java storage.type.annotation':                                                { foreground: map('#d08770') },
    'source.java storage.type.generic':                                                   { foreground: map('#8fbcbb') },
    'source.java storage.type.primitive':                                                 { foreground: map('#81a1c1') },

    'source.js punctuation.decorator':                                              { foreground: map('#d08770') },
    'source.js meta.decorator variable.other.readwrite':                            { foreground: map('#d08770') },
    'source.ts meta.decorator variable.other.readwrite':                            { foreground: map('#d08770') },
    'source.tsx meta.decorator variable.other.readwrite':                           { foreground: map('#d08770') },
    'source.js meta.decorator entity.name.function':                                { foreground: map('#d08770') },
    'source.ts meta.decorator entity.name.function':                                { foreground: map('#d08770') },
    'source.tsx meta.decorator entity.name.function':                               { foreground: map('#d08770') },
    'source.js meta.object-literal.key':                                            { foreground: map('#88c0d0') },
    'source.js storage.type.class.jsdoc':                                           { foreground: map('#8fbcbb') },
    'source.js string.quoted.template punctuation.quasi.element.begin':             { foreground: map('#81a1c1') },
    'source.js string.quoted.template punctuation.quasi.element.end':               { foreground: map('#81a1c1') },
    'source.js string.template punctuation.definition.template-expression':         { foreground: map('#81a1c1') },
    'source.js string.quoted.template meta.method-call.with-arguments':             { foreground: map('#eceff4') },
    'source.js string.template meta.template.expression support.variable.property': { foreground: map('#d8dee9') },
    'source.js string.template meta.template.expression variable.other.object':     { foreground: map('#d8dee9') },
    'source.js support.type.primitive':                                             { foreground: map('#81a1c1') },
    'source.js variable.other.object':                                              { foreground: map('#d8dee9') },
    'source.js variable.other.readwrite.alias':                                     { foreground: map('#8fbcbb') },

    'source.ts punctuation.decorator':                          { foreground: map('#d08770') },
    'source.tsx punctuation.decorator':                         { foreground: map('#d08770') },
    'source.ts meta.object-literal.key':                        { foreground: map('#d8dee9') },
    'source.tsx meta.object-literal.key':                       { foreground: map('#d8dee9') },
    'source.ts meta.object-literal.key entity.name.function':   { foreground: map('#88c0d0') },
    'source.tsx meta.object-literal.key entity.name.function':  { foreground: map('#88c0d0') },
    'source.ts support.class':                                  { foreground: map('#8fbcbb') },
    'source.ts support.type':                                   { foreground: map('#8fbcbb') },
    'source.ts entity.name.type':                               { foreground: map('#8fbcbb') },
    'source.ts entity.name.class':                              { foreground: map('#8fbcbb') },
    'source.tsx support.class':                                 { foreground: map('#8fbcbb') },
    'source.tsx support.type':                                  { foreground: map('#8fbcbb') },
    'source.tsx entity.name.type':                              { foreground: map('#8fbcbb') },
    'source.tsx entity.name.class':                             { foreground: map('#8fbcbb') },
    'source.ts support.constant.math':                          { foreground: map('#8fbcbb') },
    'source.ts support.constant.dom':                           { foreground: map('#8fbcbb') },
    'source.ts support.constant.json':                          { foreground: map('#8fbcbb') },
    'source.tsx support.constant.math':                         { foreground: map('#8fbcbb') },
    'source.tsx support.constant.dom':                          { foreground: map('#8fbcbb') },
    'source.tsx support.constant.json':                         { foreground: map('#8fbcbb') },
    'source.ts support.variable':                               { foreground: map('#d8dee9') },
    'source.tsx support.variable':                              { foreground: map('#d8dee9') },

    'text.html.basic constant.character.entity.html': { foreground: map('#ebcb8b') },
    'text.html.basic constant.other.inline-data': { foreground: map('#d08770'), fontStyle: 'italic' },
    'text.html.basic meta.tag.sgml.doctype': { foreground: map('#5e81ac') },
    'text.html.basic punctuation.definition.entity': { foreground: map('#81a1c1') },

    'source.properties entity.name.section.group-title.ini': { foreground: map('#88c0d0') },
    'source.properties punctuation.separator.key-value.ini': { foreground: map('#81a1c1') },

    'markup.heading': { foreground: map('#88c0d0') },
    'text.html.markdown markup.fenced_code.block': { foreground: map('#8fbcbb') },
    'text.html.markdown markup.fenced_code.block punctuation.definition': { foreground: map('#8fbcbb') },
    'text.html.markdown markup.inline.raw': { foreground: map('#8fbcbb') },
    'text.html.markdown markup.inline.raw punctuation.definition.raw': { foreground: map('#8fbcbb') },
    'text.html.markdown markup.italic': { fontStyle: 'italic' },
    'text.html.markdown markup.underline.link': { fontStyle: 'underline' },
    'text.html.markdown beginning.punctuation.definition.list': { foreground: map('#81a1c1') },
    'text.html.markdown beginning.punctuation.definition.quote': { foreground: map('#8fbcbb') },
    'text.html.markdown markup.quote': { foreground: map('#616e88') },
    'text.html.markdown punctuation.definition.heading': { foreground: map('#81a1c1') },
    'text.html.markdown punctuation.definition.constant': { foreground: map('#81a1c1') },
    'text.html.markdown punctuation.definition.string': { foreground: map('#81a1c1') },
    'text.html.markdown constant.other.reference.link': { foreground: map('#88c0d0') },
    'text.html.markdown string.other.link.description': { foreground: map('#88c0d0') },
    'text.html.markdown string.other.link.title': { foreground: map('#88c0d0') },

    'source.perl punctuation.definition.variable': { foreground: map('#d8dee9') },

    'source.php meta.function-call': { foreground: map('#88c0d0') },
    'source.php meta.function-call.object': { foreground: map('#88c0d0') },

    'source.python entity.name.function.decorator': { foreground: map('#d08770') },
    'source.python meta.function.decorator support.type': { foreground: map('#d08770') },
    'source.python meta.function-call.generic': { foreground: map('#88c0d0') },
    'source.python support.type': { foreground: map('#88c0d0') },
    'source.python variable.parameter.function.language': { foreground: map('#d8dee9') },
    'source.python meta.function.parameters variable.parameter.function.language.special.self': { foreground: map('#81a1c1') },

    'text.xml entity.name.tag.namespace':                           { foreground: map('#8fbcbb') },
    'text.xml keyword.other.doctype':                               { foreground: map('#5e81ac') },
    'text.xml meta.tag.preprocessor entity.name.tag':               { foreground: map('#5e81ac') },
    'text.xml string.unquoted.cdata':                               { foreground: map('#d08770'), fontStyle: 'italic' },
    'text.xml string.unquoted.cdata punctuation.definition.string': { foreground: map('#d08770'), fontStyle: 'italic' },

    'source.yaml entity.name.tag': { foreground: map('#8fbcbb') }
  }

  const tokenColors   = Object.entries(tokens).map(mapTokenColor)
  
  return { 
    $schema, 
    type, 
    tokenColors, 
    colors 
  }
}


const sym = Symbol('result')

function flattenObject (...descriptor) {
  const result = {}
  const currentPath = [ ...descriptor ]
  let key, iter, current = this

  while (iter = currentPath.shift())
    current = current[iter]
 
  console.log("c:", current)
  
  if (typeof current !== 'object')
    return current

  console.log("c:", current)
  
  if (!this[sym])
    Object.defineProperty(this, sym, {
        enumerable: false,
        value: {},
    })

  for (key in current) {
    console.log(key)
    const nextPath  = descriptor.concat(key)
    const flatPath  = nextPath.join(' ')
    const resp      = flattenObject.apply(this, nextPath)
    delete current[key]
    this[sym][flatPath] = resp
  }
  
  return current
}

const flatten = (obj) => {
  flattenObject.call(obj)
  for (let key in obj[sym]) {
    let c = obj[sym][key]
    if (typeof c === 'object' && Object.keys(c).length === 0)
      delete obj[sym][key]
  }
  return obj[sym]
}
